"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/tools/[id]/page",{

/***/ "(app-pages-browser)/./src/data/toolsData.js":
/*!*******************************!*\
  !*** ./src/data/toolsData.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   categoryNames: () => (/* binding */ categoryNames),\n/* harmony export */   getHotTools: () => (/* binding */ getHotTools),\n/* harmony export */   getMaxToolId: () => (/* binding */ getMaxToolId),\n/* harmony export */   getRandomTools: () => (/* binding */ getRandomTools),\n/* harmony export */   getRelatedTools: () => (/* binding */ getRelatedTools),\n/* harmony export */   getToolById: () => (/* binding */ getToolById),\n/* harmony export */   getToolsByPlatform: () => (/* binding */ getToolsByPlatform),\n/* harmony export */   getToolsPaginated: () => (/* binding */ getToolsPaginated),\n/* harmony export */   platformIcons: () => (/* binding */ platformIcons),\n/* harmony export */   platformNames: () => (/* binding */ platformNames),\n/* harmony export */   searchTools: () => (/* binding */ searchTools),\n/* harmony export */   toolsData: () => (/* binding */ toolsData)\n/* harmony export */ });\n// 工具数据存储文件\n// 此文件用于集中管理所有工具数据，方便站长添加和编辑工具信息\n// 平台ID到名称的映射\nconst platformNames = {\n    'douyin': '抖音',\n    'xiaohongshu': '小红书',\n    'wechat': '视频号',\n    'xianyu': '闲鱼',\n    'taobao': '淘宝',\n    'other': 'AI',\n    'official_account': '公众号',\n    'youtube': 'YouTube'\n};\n// 平台图标映射\nconst platformIcons = {\n    'douyin': '/icons/douyin.svg',\n    'xiaohongshu': '/icons/xiaohongshu.svg',\n    'wechat': '/icons/shipin.svg',\n    'xianyu': '/icons/xianyu.svg',\n    'taobao': '/icons/taobao.svg',\n    'other': '/icons/ai.svg',\n    'official_account': '/icons/gongzhonghao.svg',\n    'youtube': '/icons/youtube.svg'\n};\n// 工具分类ID到名称的映射\nconst categoryNames = {\n    'project_research': '项目调研',\n    'image_processing': '图片处理',\n    'office_efficiency': '效率办公',\n    'team_collaboration': '团队提效'\n};\n// 工具数据数组\n// 站长可以在这里添加、编辑和删除工具信息\nconst toolsData = [\n    {\n        id: '1',\n        name: 'IntFinQ',\n        description: '包含数千家上市公司年报，可精准溯源到原文。适合财经媒体的内容参考。 ',\n        platforms: [],\n        categories: [\n            'project_research'\n        ],\n        uploader: '木木@生财有术',\n        uploadDate: '2025-03-29',\n        clicks: 0,\n        detailedDescription: \"\\n      \\n            \\n                  该网站应是一个综合信息查询和知识管理平台，主要功能包括：\\n                  \\n                  1.​知识存储与分类：支持上传和管理文档（如进出口数据、公司经营报告、行业分析等），按“公开”或“个人”权限分类，形成结构化知识库。\\n                  ​2.信息检索：提供全局或按知识库范围的检索功能，帮助用户快速定位所需资料（例如宁德时代经营数据、新能源汽车行业动态等）。\\n                  3.​协作与权限管理：通过登录/注册区分用户权限，可能支持团队协作编辑或共享文档。\\n                  \\n                  典型应用场景包括企业内部分享行业数据、分析报告，或集中管理业务文档。页面显示的“2024年上半年”等关键词提示其内容侧重时效性商业信息。 \\n                \\n          \\n    \",\n        downloadLink: 'https://intfinq.textin.com/financial',\n        inviteCode: '',\n        originalPostLink: 'https://scys.com/articleDetail/xq_topic/8858225111255182',\n        screenshots: [],\n        tags: [\n            '项目调研',\n            '行业信息',\n            '企业年报'\n        ]\n    },\n    {\n        id: '2',\n        name: '中国产业信息网',\n        description: '提供中国产业经济信息和数据，涵盖多个行业和领域，帮助用户进行市场分析。',\n        platforms: [],\n        categories: [\n            'project_research'\n        ],\n        uploader: '木木@生财有术',\n        uploadDate: '2025-03-29',\n        clicks: 0,\n        detailedDescription: \"\\n      中国产业经济信息网（CINIC）是由中宣部主管、人民日报社代管的中国报业协会主办的国家级产业经济信息平台，成立于1997年，是经国务院新闻办批准的首批网络新闻媒体之一。网站依托54家国家级行业媒体的资源，构建了覆盖国民经济全领域的“中国产经数据库”，日均更新数据1500余条，累计信息量超1000万条，为政府、企业及研究机构提供权威的政策解读、行业分析和市场数据。其栏目涵盖金融、能源、化工、物流等十多个重点产业，并与新华社、路透社等国内外机构建立合作，每日向海外发布200余条产经资讯。  \\n      \\n      作为中国百强经济网站，该平台兼具行业联合优势，汇聚70余家行业报资源及50多位领域专家，通过产业论坛、危机公关等服务推动产经信息高效传播。2025年数据显示，其数据库被国家图书馆等机构长期采用，并持续深化融媒体发展，致力于成为国家级产业经济信息枢纽。\\n    \",\n        downloadLink: 'http://cinic.org.cn/',\n        inviteCode: '',\n        originalPostLink: 'https://scys.com/articleDetail/xq_topic/8858225111255182',\n        screenshots: [],\n        tags: [\n            '行业资讯',\n            '政策解读',\n            '数据服务',\n            '产经预警',\n            '国际视野',\n            '专家观点',\n            '融媒体中心'\n        ]\n    }\n];\n// 获取工具ID的最大值\nconst getMaxToolId = ()=>{\n    if (toolsData.length === 0) return 0;\n    // 尝试将所有ID转换为数字，忽略非数字ID\n    const numericIds = toolsData.map((tool)=>parseInt(tool.id, 10)).filter((id)=>!isNaN(id));\n    // 如果没有有效的数字ID，返回0\n    if (numericIds.length === 0) return 0;\n    // 返回最大ID值\n    return Math.max(...numericIds);\n};\n// 获取热门工具列表（按点击量排序）\nconst getHotTools = function() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 5;\n    return [\n        ...toolsData\n    ].sort((a, b)=>b.clicks - a.clicks).slice(0, limit);\n};\n// 按平台过滤工具\nconst getToolsByPlatform = (platformId)=>{\n    if (!platformId) return toolsData;\n    return toolsData.filter((tool)=>tool.platforms.includes(platformId));\n};\n// 搜索工具\nconst searchTools = (query)=>{\n    if (!query) return toolsData;\n    const lowercaseQuery = query.toLowerCase();\n    return toolsData.filter((tool)=>tool.name.toLowerCase().includes(lowercaseQuery) || tool.description.toLowerCase().includes(lowercaseQuery) || tool.tags.some((tag)=>tag.toLowerCase().includes(lowercaseQuery)));\n};\n// 获取工具详情\nconst getToolById = (id)=>{\n    const tool = toolsData.find((tool)=>tool.id === id);\n    if (tool) {\n        return {\n            ...tool,\n            categories: tool.categories || []\n        };\n    }\n    return null;\n};\n// 获取相关工具推荐\nconst getRelatedTools = function(currentToolId) {\n    let limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3;\n    const currentTool = getToolById(currentToolId);\n    if (!currentTool) return [];\n    return toolsData.filter((tool)=>tool.id !== currentToolId && (tool.platforms.some((platform)=>currentTool.platforms.includes(platform)) || tool.tags.some((tag)=>currentTool.tags.includes(tag)))).slice(0, limit);\n};\n// 分页获取工具\nconst getToolsPaginated = function() {\n    let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, pageSize = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 12;\n    const startIndex = (page - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    const data = toolsData.slice(startIndex, endIndex);\n    return {\n        data,\n        pagination: {\n            total: toolsData.length,\n            pageSize,\n            currentPage: page,\n            totalPages: Math.ceil(toolsData.length / pageSize)\n        }\n    };\n};\n// 获取随机工具推荐\nconst getRandomTools = function(currentToolId) {\n    let limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3;\n    try {\n        // 过滤掉当前工具\n        const filteredTools = toolsData.filter((tool)=>tool.id !== currentToolId);\n        // 如果没有足够的工具，则返回所有可用工具\n        if (filteredTools.length <= limit) {\n            return filteredTools;\n        }\n        // 随机打乱工具顺序\n        const shuffled = [\n            ...filteredTools\n        ].sort(()=>0.5 - Math.random());\n        // 返回指定数量的工具\n        return shuffled.slice(0, limit);\n    } catch (error) {\n        console.error('获取随机工具失败:', error);\n        return [];\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/data/toolsData.js\n"));

/***/ })

});